{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","classNames","id","href","onClick","event","currentTarget","hash","slice","currentTab","title","textContent","content","replace","find","App","useState","selectedTab","setSelectedTab","currentTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWG,IAAW,CAAE,YAAaD,EAAIE,KAAON,IAChD,UAAQ,MAFV,SAIE,mBACEO,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,SAACC,GAAW,IAAD,EAClB,GAAIA,EAAMC,cAAcC,KAAKC,MAAM,KAAOZ,EAA1C,CAIA,IAAMa,EAAa,CACjBP,GAAIG,EAAMC,cAAcC,KAAKC,MAAM,GACnCE,MAAOL,EAAMC,cAAcK,YAC3BC,QAAQ,aAAD,QAAe,UAACP,EAAMC,cAAcK,mBAArB,QAAoC,IAAIE,QAAQ,QAAS,MAGjFhB,EAAcY,KAdlB,SAiBGT,EAAIU,iBAOf,qBAAKZ,UAAU,QAAQ,UAAQ,aAA/B,mBACGH,EAAKmB,MAAK,SAAAd,GAAG,OAAIA,EAAIE,KAAON,YAD/B,aACG,EAA4CgB,cC/CxCjB,EAAO,CAClB,CAAEO,GAAI,QAASQ,MAAO,QAASE,QAAS,eACxC,CAAEV,GAAI,QAASQ,MAAO,QAASE,QAAS,eACxC,CAAEV,GAAI,QAASQ,MAAO,QAASE,QAAS,gBAG7BG,EAAgB,WAAO,IAAD,EACjC,EAAsCC,mBAASrB,EAAK,GAAGO,IAAvD,mBAAOe,EAAP,KAAoBC,EAApB,KAQA,OACE,sBAAKpB,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CACsBH,EAAKmB,MAAK,SAAAd,GAAG,OAAIA,EAAIE,KAAOe,YADlD,aACsB,EAA0CP,SAGhE,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeqB,EACfpB,cAfW,SAAC,GAAiB,IAAD,EAAdK,EAAc,EAAdA,GACZiB,GAAe,UAAAxB,EAAKmB,MAAK,SAAAd,GAAG,OAAIA,EAAIE,KAAOA,YAA5B,eAAiCA,KAAMP,EAAK,GAAGO,GAEpEgB,EAAeC,UCfnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8e733f62.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport interface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: CallableFunction;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames({ 'is-active': tab.id === selectedTabId })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={(event) => {\n                  if (event.currentTarget.hash.slice(1) === selectedTabId) {\n                    return;\n                  }\n\n                  const currentTab = {\n                    id: event.currentTarget.hash.slice(1),\n                    title: event.currentTarget.textContent,\n                    content: `Some text ${(event.currentTarget.textContent ?? '').replace(/^\\D+/g, '')}`,\n                  };\n\n                  onTabSelected(currentTab);\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab, Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0].id);\n\n  const onSelect = ({ id }: Tab) => {\n    const currentTabId = tabs.find(tab => tab.id === id)?.id || tabs[0].id;\n\n    setSelectedTab(currentTabId);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => tab.id === selectedTab)?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab}\n        onTabSelected={onSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}